PLAYLOOP="cvlc --fullscreen --loop --quiet"
PLAYONCE="cvlc --fullscreen --play-and-exit --quiet"
DURATION="avprobe -v 0 -show_format_entry duration"

STOPWATCH=stopwatch_impl

PLAYFOR()
{
	local rate="$(python -c "print(max($($DURATION "$1") / $2, 1))")"
	$PLAYONCE --rate "$rate" "$1"
}

playloopbg()
{
	fn="$*"
	range="${fn#*:}"
	if [ "$range" != "$fn" ]
	then
		range="${range%.*}"
		start="${range%-*}"
		stop="${range#*-}"
		$PLAYLOOP --start-time $start --stop-time $stop "$fn" &
	else
		$PLAYLOOP "$fn" &
	fi
}

playalloncefor()
{
	local dir="$1"
	local timetotal="$2"
	local count=$(($(ls "$dir" | wc -l)))
	local timeper="$(python -c "print($timetotal / $count)")"
	for drill in "$1"/*
	do
		PLAYFOR "$drill" "$timeper"
	done
}

notify()
{
	notify-send "$1" "$2"
}

stopwatch_impl()
{
	if [ "$2" != "" ]
	then
		msg="$(echo "$2" | sed 's/\&/\&amp;/g')"
	else
		msg="$1 seconds"
	fi
	date1=`date +%s`
	while true
	do 
		echo $((100 * ($(date +%s) - $date1) / $1))
		echo -ne "$(date -u --date @$((`date +%s` - date1)) +%H:%M:%S) $msg\r" 1>&2
		#sleep 0.1
	done |
	zenity --progress --auto-close --no-cancel --pulsate --text="$msg" 2>/dev/null #&
	#sleep "$@"
	#kill $!
	echo "DONE! $@" 1>&2
}
